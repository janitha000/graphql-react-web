[{"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\index.js":"1","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\App.js":"2","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Home.js":"3","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Login.js":"4","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Register.js":"5","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\NavBar.js":"6","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\Posts\\Post.js":"7","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\hooks\\useForm.js":"8","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\contexts\\auth.js":"9","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\util\\AuthRoute.js":"10","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\Posts\\PostForm.js":"11"},{"size":220,"mtime":1611733644497,"results":"12","hashOfConfig":"13"},{"size":1719,"mtime":1612508064027,"results":"14","hashOfConfig":"13"},{"size":1229,"mtime":1612510318096,"results":"15","hashOfConfig":"13"},{"size":2507,"mtime":1612429132409,"results":"16","hashOfConfig":"13"},{"size":2925,"mtime":1612425544130,"results":"17","hashOfConfig":"13"},{"size":1825,"mtime":1612429805210,"results":"18","hashOfConfig":"13"},{"size":3242,"mtime":1612510730808,"results":"19","hashOfConfig":"13"},{"size":482,"mtime":1612424755662,"results":"20","hashOfConfig":"13"},{"size":1354,"mtime":1612430572932,"results":"21","hashOfConfig":"13"},{"size":428,"mtime":1612431888246,"results":"22","hashOfConfig":"13"},{"size":2012,"mtime":1612507461766,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1p1gp37",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\index.js",[],["49","50"],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\App.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Home.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Login.js",["51"],"import React, { useContext, useState } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport Loader from \"react-loader-spinner\";\r\nimport { AuthContext } from '../../contexts/auth'\r\n\r\nimport './Register.css'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst Login = ({ history }) => {\r\n    const { login } = useContext(AuthContext)\r\n    const [errors, setErrors] = useState('')\r\n\r\n    const { onChange, onSubmit, clearForm, values } = useForm(loginUserCallback, {\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n        update(_, result) {\r\n            console.log(result)\r\n            let { data: { login: userData } } = result\r\n            login(userData)\r\n            history.push('/')\r\n        },\r\n        onError(err) {\r\n            console.log(err.toString())\r\n            setErrors(err.toString())\r\n        },\r\n        variables: values\r\n    })\r\n\r\n    function loginUserCallback() {\r\n        loginUser()\r\n        clearForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"login-box\">\r\n                <h2>Login</h2>\r\n                <form>\r\n                    <div className=\"user-box\">\r\n                        <input type=\"text\" name=\"username\" value={values.username} onChange={(e) => onChange(e)} required />\r\n                        <label>Username</label>\r\n                    </div>\r\n\r\n                    <div className=\"user-box\">\r\n                        <input type=\"password\" name=\"password\" value={values.password} onChange={(e) => onChange(e)} required />\r\n                        <label>Password</label>\r\n                    </div>\r\n                    <a href=\"#\" onClick={onSubmit}>  Submit</a>\r\n\r\n                </form>\r\n                <div className=\"register-message\">\r\n                    {loading && (<Loader type=\"Bars\" color=\"black\" height={50} width={50} />)}\r\n                    {!loading && errors && (<p style={{ color: 'red' }}>{errors}</p>)}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n    mutation login(\r\n        $username: String!\r\n        $password: String!\r\n    ) {\r\n        login(\r\n            loginInput: {\r\n                username: $username\r\n                password: $password\r\n            }\r\n        ) {\r\n            user { id, username, email, createdAt}\r\n            token\r\n        }\r\n    }\r\n    \r\n`\r\n\r\nexport default Login\r\n","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\pages\\Register.js",["52"],"import React, { useState } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport './Register.css'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst Register = () => {\r\n\r\n    const [result, setResult] = useState({})\r\n    const [errors, setErrors] = useState('')\r\n    const { onChange, onSubmit, clearForm, values } = useForm(registerUser, { username: '', email: '', password: '' })\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, result) {\r\n            console.log(result)\r\n            let { data: { register } } = result\r\n            setResult(register)\r\n        },\r\n        onError(err) {\r\n            console.log(err.toString())\r\n            setErrors(err.toString())\r\n        },\r\n        variables: values\r\n    })\r\n\r\n    function registerUser() {\r\n        addUser();\r\n        clearForm({ username: '', email: '', password: '' });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"login-box\">\r\n                <h2>Register</h2>\r\n                <form>\r\n                    <div className=\"user-box\">\r\n                        <input type=\"text\" name=\"username\" value={values.username} onChange={(e) => onChange(e)} required />\r\n                        <label>Username</label>\r\n                    </div>\r\n                    <div className=\"user-box\">\r\n                        <input type=\"text\" name=\"email\" value={values.email} onChange={(e) => onChange(e)} required />\r\n                        <label>Email</label>\r\n                    </div>\r\n                    <div className=\"user-box\">\r\n                        <input type=\"password\" name=\"password\" value={values.password} onChange={(e) => onChange(e)} required />\r\n                        <label>Password</label>\r\n                    </div>\r\n                    <a href=\"#\" onClick={onSubmit}>  Submit</a>\r\n\r\n                </form>\r\n                <div className=\"register-message\">\r\n                    {loading && (<Loader type=\"Bars\" color=\"black\" height={50} width={50} />)}\r\n                    {!loading && result && result.user && (<p>User Registered Successfully. Navigate to <Link to=\"/login\" >Login</Link> page.</p>)}\r\n                    {!loading && errors && (<p style={{ color: 'red' }}>{errors}</p>)}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n    mutation register(\r\n        $username: String!\r\n        $password: String!\r\n        $email: String!\r\n    ) {\r\n        register(\r\n            registerInput: {\r\n                username: $username\r\n                password: $password\r\n                email: $email\r\n            }\r\n        ) {\r\n            user { id, username, email, createdAt}\r\n            token\r\n        }\r\n    }\r\n    \r\n`\r\n\r\nexport default Register\r\n","D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\NavBar.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\Posts\\Post.js",["53","54"],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\hooks\\useForm.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\contexts\\auth.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\util\\AuthRoute.js",[],"D:\\Development\\my-fb-react-graphql\\fb-client\\src\\components\\Posts\\PostForm.js",["55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":52,"column":21,"nodeType":"62","endLine":52,"endColumn":52},{"ruleId":"60","severity":1,"message":"61","line":51,"column":21,"nodeType":"62","endLine":51,"endColumn":52},{"ruleId":"63","severity":1,"message":"64","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":15,"column":50,"nodeType":"65","messageId":"66","endLine":15,"endColumn":55},{"ruleId":"63","severity":1,"message":"68","line":10,"column":26,"nodeType":"65","messageId":"66","endLine":10,"endColumn":31},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FaHeart' is defined but never used.","Identifier","unusedVar","'likes' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]